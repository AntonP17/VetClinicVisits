version: "3.9"

services:

  postgres-analitics:
    container_name: postgres-analitics
    image: postgres:latest
    environment:
      POSTGRES_DB: DB-application
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 297032
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d DB-application" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s


  postgres-employes:
    container_name: postgres-employes
    image: postgres:15
    environment:
      POSTGRES_DB: DB-application
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 297032
    ports:
      - "5431:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      postgres 
      -c wal_level=replica 
      -c max_wal_senders=10 
      -c max_replication_slots=5
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d DB-application" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s


  postgres-employes-rep1:
    image: postgres:15
    user: root
    depends_on:
      - postgres-employes
    environment:
      POSTGRES_DB: vetclinic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 297032
    ports:
      - "5433:5432"
    volumes:
      - postgres_replica_1_data:/var/lib/postgresql/data
    command: >
      bash -c "
              # Ждем мастера
              until pg_isready -h postgres-employes -p 5432; do
                echo 'Waiting for master...'
                sleep 2
              done

              # Очищаем директорию
              rm -rf /var/lib/postgresql/data/*

              # Делаем бэкап
              su - postgres -c 'PGPASSWORD=297032 pg_basebackup -h postgres-employes -p 5432 -U postgres -D /var/lib/postgresql/data -P -R -X stream'

              # Исправляем права
              chmod 700 /var/lib/postgresql/data
              chown -R postgres:postgres /var/lib/postgresql/data

              # Запускаем PostgreSQL с полным путем
              exec su - postgres -c '/usr/lib/postgresql/15/bin/postgres -c hot_standby=on -D /var/lib/postgresql/data'
            "1

  postgres-employes-rep2:
    image: postgres:15
    user: root
    depends_on:
      - postgres-employes
    environment:
      POSTGRES_DB: vetclinic
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 297032
    ports:
      - "5430:5432"
    volumes:
      - postgres_replica_1_data:/var/lib/postgresql/data
    command: >
      bash -c "
              # Ждем мастера
              until pg_isready -h postgres-employes -p 5432; do
                echo 'Waiting for master...'
                sleep 2
              done

              # Очищаем директорию
              rm -rf /var/lib/postgresql/data/*

              # Делаем бэкап
              su - postgres -c 'PGPASSWORD=297032 pg_basebackup -h postgres-employes -p 5432 -U postgres -D /var/lib/postgresql/data -P -R -X stream'

              # Исправляем права
              chmod 700 /var/lib/postgresql/data
              chown -R postgres:postgres /var/lib/postgresql/data

              # Запускаем PostgreSQL с полным путем
              exec su - postgres -c '/usr/lib/postgresql/15/bin/postgres -c hot_standby=on -D /var/lib/postgresql/data'
            "1    

  postgres-clients:
    container_name: postgres-clients
    image: postgres:latest
    environment:
      POSTGRES_DB: DB-application
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 297032
    ports:
      - "5434:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d DB-application" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  postgres-visits:
    container_name: postgres-visits
    image: postgres:latest
    environment:
      POSTGRES_DB: DB-application
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 297032
    ports:
      - "5435:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d DB-application" ]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 10s

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  vet-clinic-visits:
    container_name: vet-clinic-visits
    image: antonp17/vet-clinic-visit:1.0.1
    depends_on:
      - redis
      - postgres-visits
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-visits:5432/DB-application
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 297032
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_LIQUIBASE_DEFAULT_SCHEMA: public
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9094,kafka-3:9096
    ports:
      - "8080:8080"

  vet-clinic-analitics:
    container_name: vet-clinic-analitics
    image: antonp17/vet-clinic-analitics:1.0.1
    depends_on:
      - redis
      - postgres-analitics
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-analitics:5432/DB-application?currentSchema=vet_visits_history_status
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 297032
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_LIQUIBASE_DEFAULT_SCHEMA: public
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9094,kafka-3:9096
    ports:
      - "8085:8085"


  vet-clinic-employes:
    container_name: vet-clinic-employes
    image: antonp17/vet-clinic-employes:1.0.1
    depends_on:
      - redis
      - postgres-employes
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-employes:5432/DB-application?currentSchema=vet_doctors
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 297032
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_LIQUIBASE_DEFAULT_SCHEMA: public
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9094,kafka-3:9096
    ports:
      - "8082:8082"



  vet-clinic-clients:
    container_name: vet-clinic-clients
    image: antonp17/vet-clinic-clients:1.0.3
    depends_on:
      - redis
      - postgres-clients
      - kafka-1
      - kafka-2
      - kafka-3
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-clients:5432/DB-application?currentSchema=vet_clients
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: 297032
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_LIQUIBASE_DEFAULT_SCHEMA: public
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka-1:9092,kafka-2:9094,kafka-3:9096
    ports:
      - "8081:8081"


  kafka-1:
    container_name: kafka-node-1
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=IcG9o_gUQdGlFEeShYto7g
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-1:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafka-2:
    image: bitnami/kafka:latest
    container_name: kafka-node-2
    ports:
      - "9094:9094"
    environment:
      - KAFKA_CFG_NODE_ID=2
      - KAFKA_KRAFT_CLUSTER_ID=IcG9o_gUQdGlFEeShYto7g
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9094,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

  kafka-3:
    image: bitnami/kafka:latest
    container_name: kafka-node-3
    ports:
      - "9096:9096"
    environment:
      - KAFKA_CFG_NODE_ID=3
      - KAFKA_KRAFT_CLUSTER_ID=IcG9o_gUQdGlFEeShYto7g
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9096,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka-3:9096
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER

volumes:
  postgres_data:
  postgres_replica_1_data:
  postgres_replica_2_data: